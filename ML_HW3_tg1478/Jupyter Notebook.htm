<!DOCTYPE html>
<!-- saved from url=(0095)http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb# -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    

    <title>Bayesian Networks 2-Practice-Part-Solution</title>
    <link rel="shortcut icon" type="image/x-icon" href="http://localhost:8888/static/base/images/favicon.ico?v=30780f272ab4aac64aa073a841546240">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" href="./Jupyter Notebook_files/jquery-ui.min.css" type="text/css">
    <link rel="stylesheet" href="./Jupyter Notebook_files/jquery.typeahead.min.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    


<script type="text/javascript" src="./Jupyter Notebook_files/MathJax.js" charset="utf-8"></script>

<script type="text/javascript">
// MathJax disabled, set as null to distingish from *missing* MathJax,
// where it will be undefined, and should prompt a dialog later.
window.mathjax_url = "/static/components/MathJax/MathJax.js";
</script>

<link rel="stylesheet" href="./Jupyter Notebook_files/bootstrap-tour.min.css" type="text/css">
<link rel="stylesheet" href="./Jupyter Notebook_files/codemirror.css">


    <link rel="stylesheet" href="./Jupyter Notebook_files/style.min.css" type="text/css">
    

<link rel="stylesheet" href="./Jupyter Notebook_files/override.css" type="text/css">
<link rel="stylesheet" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb" id="kernel-css" type="text/css">


    <link rel="stylesheet" href="./Jupyter Notebook_files/custom.css" type="text/css">
    <script src="./Jupyter Notebook_files/promise.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="./Jupyter Notebook_files/require.js" type="text/javascript" charset="utf-8"></script>
    <script>
      require.config({
          
          baseUrl: '/static/',
          paths: {
            'auth/js/main': 'auth/js/main.min',
            custom : '/custom',
            nbextensions : '/nbextensions',
            kernelspecs : '/kernelspecs',
            underscore : 'components/underscore/underscore-min',
            backbone : 'components/backbone/backbone-min',
            jquery: 'components/jquery/jquery.min',
            bootstrap: 'components/bootstrap/js/bootstrap.min',
            bootstraptour: 'components/bootstrap-tour/build/js/bootstrap-tour.min',
            'jquery-ui': 'components/jquery-ui/ui/minified/jquery-ui.min',
            moment: 'components/moment/moment',
            codemirror: 'components/codemirror',
            termjs: 'components/term.js/src/term',
            typeahead: 'components/jquery-typeahead/dist/jquery.typeahead'
          },
	  map: { // for backward compatibility
	    "*": {
		"jqueryui": "jquery-ui",
	    }
	  },
          shim: {
            typeahead: {
              deps: ["jquery"],
              exports: "typeahead"
            },
            underscore: {
              exports: '_'
            },
            backbone: {
              deps: ["underscore", "jquery"],
              exports: "Backbone"
            },
            bootstrap: {
              deps: ["jquery"],
              exports: "bootstrap"
            },
            bootstraptour: {
              deps: ["bootstrap"],
              exports: "Tour"
            },
            "jquery-ui": {
              deps: ["jquery"],
              exports: "$"
            }
          },
          waitSeconds: 30,
      });

      require.config({
          map: {
              '*':{
                'contents': 'services/contents',
              }
          }
      });

      define("bootstrap", function () {
          return window.$;
      });

      define("jquery", function () {
          return window.$;
      });

      define("jqueryui", function () {
          return window.$;
      });

      define("jquery-ui", function () {
          return window.$;
      });
    </script>

    
    

<style>@media print {#ghostery-purple-box {display:none !important}}</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="services/contents" src="./Jupyter Notebook_files/contents.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="custom/custom" src="./Jupyter Notebook_files/custom.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><script type="text/javascript" src="./Jupyter Notebook_files/fontdata.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nbpresent/js/nbpresent.min" src="./Jupyter Notebook_files/nbpresent.min.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_anacondacloud/main" src="./Jupyter Notebook_files/main.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/nb_conda/main" src="./Jupyter Notebook_files/main(1).js"></script><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><script type="text/javascript" src="./Jupyter Notebook_files/Safe.js"></script></head>

<body class="notebook_app  command_mode" data-base-url="/" data-ws-url="" data-notebook-name="Bayesian%20Networks%202-Practice-Part-Solution.ipynb" data-notebook-path="Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb"><div id="MathJax_Message">Loading [MathJax]/extensions/Safe.js</div>

<noscript>
    &lt;div id='noscript'&gt;
      Jupyter Notebook requires JavaScript.&lt;br&gt;
      Please enable it to proceed.
  &lt;/div&gt;
</noscript>

<div id="header" style="display: block;">
  <div id="header-container" class="container">
  <div id="ipython_notebook" class="nav navbar-brand pull-left"><a href="http://localhost:8888/tree" title="dashboard"><img src="./Jupyter Notebook_files/logo.png" alt="Jupyter Notebook"></a></div>

  
  
  

    <span id="login_widget">
      
    </span>

  

  

  


<span id="save_widget" class="pull-left save_widget">
    <span id="notebook_name" class="filename">Bayesian Networks 2-Practice-Part-Solution</span>
    <span class="checkpoint_status"></span>
    <span class="autosave_status">(autosaved)</span>
</span>

<span id="kernel_logo_widget">
  
  <img class="current_kernel_logo" src="http://localhost:8888/kernelspecs/Python%20[ipykernel_py2]/logo-64x64.png" style="display: inline;">
  
</span>


  </div>
  <div class="header-bar"></div>

  
<div id="menubar-container" class="container">
<div id="menubar">
    <div id="menus" class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <button type="button" class="btn btn-default navbar-btn navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
              <i class="fa fa-bars"></i>
              <span class="navbar-text">Menu</span>
            </button>
            <p id="kernel_indicator" class="navbar-text indicator_area">
              <span class="kernel_indicator_name">Python [ipykernel_py2]</span>
              <i id="kernel_indicator_icon" class="kernel_busy_icon" title="Kernel Busy"></i>
            </p>
            <i id="readonly-indicator" class="navbar-text" title="This notebook is read-only" style="display: none;">
                <span class="fa-stack">
                    <i class="fa fa-save fa-stack-1x"></i>
                    <i class="fa fa-ban fa-stack-2x text-danger"></i>
                </span>
            </i>
            <i id="modal_indicator" class="navbar-text modal_indicator" title="Command Mode"></i>
            <span id="notification_area"><div id="notification_kernel" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div><div id="notification_notebook" class="notification_widget btn btn-xs navbar-btn" style="display: inline-block; opacity: 0;"><span>Saving every 120s</span></div></span>
            <div class="navbar-collapse collapse">
              <ul class="nav navbar-nav">
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">File</a>
                    <ul id="file_menu" class="dropdown-menu">
                        <li id="new_notebook" class="dropdown-submenu">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">New Notebook</a>
                            <ul class="dropdown-menu" id="menu-new-notebook-submenu"><li id="new-notebook-submenu-Python [Root]"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python [Root]</a></li><li id="new-notebook-submenu-Python [bokeh-notebooks]"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python [bokeh-notebooks]</a></li><li id="new-notebook-submenu-Python [ipykernel_py2]"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python [ipykernel_py2]</a></li></ul>
                        </li>
                        <li id="open_notebook" title="Opens a new window with the Dashboard view">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Open...</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="copy_notebook" title="Open a copy of this notebook&#39;s contents and start a new kernel">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Make a Copy...</a></li>
                        <li id="rename_notebook"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Rename...</a></li>
                        <li id="save_checkpoint"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Save and Checkpoint</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="restore_checkpoint" class="dropdown-submenu"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Revert to Checkpoint</a>
                          <ul class="dropdown-menu"><li class="disabled"><a>No checkpoints</a></li></ul>
                        </li>
                        <li class="divider"></li>
                        <li id="print_preview"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Print Preview</a></li>
                        <li class="dropdown-submenu"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Download as</a>
                            <ul class="dropdown-menu">
                                <li id="download_ipynb"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Notebook (.ipynb)</a></li>
                                <li id="download_script"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python (.py)</a></li>
                                <li id="download_html"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">HTML (.html)</a></li>
                                <li id="download_markdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Markdown (.md)</a></li>
                                <li id="download_rst"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">reST (.rst)</a></li>
                                <li id="download_pdf"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">PDF via LaTeX (.pdf)</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="trust_notebook" title="Trust the output of this notebook" class="disabled">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Trusted Notebook</a></li>
                        <li class="divider"></li>
                        <li id="kill_and_exit" title="Shutdown this notebook&#39;s kernel, and close this window">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Close and Halt</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Edit</a>
                    <ul id="edit_menu" class="dropdown-menu">
                        <li id="cut_cell"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Cut Cells</a></li>
                        <li id="copy_cell"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Copy Cells</a></li>
                        <li id="paste_cell_above" class="disabled"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Paste Cells Above</a></li>
                        <li id="paste_cell_below" class="disabled"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Paste Cells Below</a></li>
                        <li id="paste_cell_replace" class="disabled"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Paste Cells &amp; Replace</a></li>
                        <li id="delete_cell"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Delete Cells</a></li>
                        <li id="undelete_cell" class="disabled"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Undo Delete Cells</a></li>
                        <li class="divider"></li>
                        <li id="split_cell"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Split Cell</a></li>
                        <li id="merge_cell_above"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Merge Cell Above</a></li>
                        <li id="merge_cell_below"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Merge Cell Below</a></li>
                        <li class="divider"></li>
                        <li id="move_cell_up"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Move Cell Up</a></li>
                        <li id="move_cell_down"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Move Cell Down</a></li>
                        <li class="divider"></li>
                        <li id="edit_nb_metadata"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Edit Notebook Metadata</a></li>
                        <li class="divider"></li>
                        <li id="find_and_replace"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#"> Find and Replace </a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">View</a>
                    <ul id="view_menu" class="dropdown-menu">
                        <li id="toggle_header" title="Show/Hide the logo and notebook title (above menu bar)">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Toggle Header</a></li>
                        <li id="toggle_toolbar" title="Show/Hide the action icons (below menu bar)">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Toggle Toolbar</a></li>
                        <li id="menu-cell-toolbar" class="dropdown-submenu">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Cell Toolbar</a>
                            <ul class="dropdown-menu" id="menu-cell-toolbar-submenu"><li data-name="None"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">None</a></li><li data-name="Edit%20Metadata"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Edit Metadata</a></li><li data-name="Raw%20Cell%20Format"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Raw Cell Format</a></li><li data-name="Slideshow"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Slideshow</a></li></ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Insert</a>
                    <ul id="insert_menu" class="dropdown-menu">
                        <li id="insert_cell_above" title="Insert an empty Code cell above the currently active cell">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Insert Cell Above</a></li>
                        <li id="insert_cell_below" title="Insert an empty Code cell below the currently active cell">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Insert Cell Below</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Cell</a>
                    <ul id="cell_menu" class="dropdown-menu">
                        <li id="run_cell" title="Run this cell, and move cursor to the next one">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Run Cells</a></li>
                        <li id="run_cell_select_below" title="Run this cell, select below">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Run Cells and Select Below</a></li>
                        <li id="run_cell_insert_below" title="Run this cell, insert below">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Run Cells and Insert Below</a></li>
                        <li id="run_all_cells" title="Run all cells in the notebook">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Run All</a></li>
                        <li id="run_all_cells_above" title="Run all cells above (but not including) this cell">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Run All Above</a></li>
                        <li id="run_all_cells_below" title="Run this cell and all cells below it">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Run All Below</a></li>
                        <li class="divider"></li>
                        <li id="change_cell_type" class="dropdown-submenu" title="All cells in the notebook have a cell type. By default, new cells are created as &#39;Code&#39; cells">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Cell Type</a>
                            <ul class="dropdown-menu">
                              <li id="to_code" title="Contents will be sent to the kernel for execution, and output will display in the footer of cell">
                                  <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Code</a></li>
                              <li id="to_markdown" title="Contents will be rendered as HTML and serve as explanatory text">
                                  <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Markdown</a></li>
                              <li id="to_raw" title="Contents will pass through nbconvert unmodified">
                                  <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Raw NBConvert</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="current_outputs" class="dropdown-submenu"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Current Outputs</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_current_output" title="Hide/Show the output of the current cell">
                                    <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Toggle</a>
                                </li>
                                <li id="toggle_current_output_scroll" title="Scroll the output of the current cell">
                                    <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_current_output" title="Clear the output of the current cell">
                                    <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Clear</a>
                                </li>
                            </ul>
                        </li>
                        <li id="all_outputs" class="dropdown-submenu"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">All Output</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_all_output" title="Hide/Show the output of all cells">
                                    <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Toggle</a>
                                </li>
                                <li id="toggle_all_output_scroll" title="Scroll the output of all cells">
                                    <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_all_output" title="Clear the output of all cells">
                                    <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Clear</a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Kernel</a>
                    <ul id="kernel_menu" class="dropdown-menu">
                        <li id="int_kernel" title="Send KeyboardInterrupt (CTRL-C) to the Kernel">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Interrupt</a>
                        </li>
                        <li id="restart_kernel" title="Restart the Kernel">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Restart</a>
                        </li>
                        <li id="restart_clear_output" title="Restart the Kernel and clear all output">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Restart &amp; Clear Output</a>
                        </li>
                        <li id="restart_run_all" title="Restart the Kernel and re-run the notebook">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Restart &amp; Run All</a>
                        </li>
                        <li id="reconnect_kernel" title="Reconnect to the Kernel">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Reconnect</a>
                        </li>
                        <li class="divider"></li>
                        <li id="menu-change-kernel" class="dropdown-submenu">
                            <a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Change kernel</a>
                            <ul class="dropdown-menu" id="menu-change-kernel-submenu"><li id="kernel-submenu-Python [Root]"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python [Root]</a></li><li id="kernel-submenu-Python [bokeh-notebooks]"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python [bokeh-notebooks]</a></li><li id="kernel-submenu-Python [ipykernel_py2]"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Python [ipykernel_py2]</a></li></ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Help</a>
                    <ul id="help_menu" class="dropdown-menu">
                        
                        <li id="notebook_tour" title="A quick tour of the notebook user interface"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">User Interface Tour</a></li>
                        <li id="keyboard_shortcuts" title="Opens a tooltip with all keyboard shortcuts"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">Keyboard Shortcuts</a></li>
                        <li class="divider"></li>
                        

                        
                            
                                <li><a rel="noreferrer" href="http://nbviewer.ipython.org/github/ipython/ipython/blob/3.x/examples/Notebook/Index.ipynb" target="_blank" title="Opens in a new window">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Notebook Help
                                </a></li>
                            
                                <li><a rel="noreferrer" href="https://help.github.com/articles/markdown-basics/" target="_blank" title="Opens in a new window">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Markdown
                                </a></li>
                            
                            
                        
                        <li class="divider"></li>
                        <li title="About Jupyter Notebook"><a id="notebook_about" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#">About</a></li>
                        
                    </ul>
                </li>
              </ul>
            </div>
        </div>
    </div>
</div>

<div id="maintoolbar" class="navbar">
  <div class="toolbar-inner navbar-inner navbar-nobg">
    <div id="maintoolbar-container" class="container toolbar"><div class="btn-group" id="save-notbook"><button class="btn btn-default" title="Save and Checkpoint" data-jupyter-action="jupyter-notebook:save-notebook"><i class="fa-save fa"></i></button></div><div class="btn-group" id="insert_above_below"><button class="btn btn-default" title="insert cell below" data-jupyter-action="jupyter-notebook:insert-cell-below"><i class="fa-plus fa"></i></button></div><div class="btn-group" id="cut_copy_paste"><button class="btn btn-default" title="cut selected cells" data-jupyter-action="jupyter-notebook:cut-cell"><i class="fa-cut fa"></i></button><button class="btn btn-default" title="copy selected cells" data-jupyter-action="jupyter-notebook:copy-cell"><i class="fa-copy fa"></i></button><button class="btn btn-default" title="paste cells below" data-jupyter-action="jupyter-notebook:paste-cell-below"><i class="fa-paste fa"></i></button></div><div class="btn-group" id="move_up_down"><button class="btn btn-default" title="move selected cells up" data-jupyter-action="jupyter-notebook:move-cell-up"><i class="fa-arrow-up fa"></i></button><button class="btn btn-default" title="move selected cells down" data-jupyter-action="jupyter-notebook:move-cell-down"><i class="fa-arrow-down fa"></i></button></div><div class="btn-group" id="run_int"><button class="btn btn-default" title="run cell, select below" data-jupyter-action="jupyter-notebook:run-cell-and-select-next"><i class="fa-step-forward fa"></i></button><button class="btn btn-default" title="interrupt kernel" data-jupyter-action="jupyter-notebook:interrupt-kernel"><i class="fa-stop fa"></i></button><button class="btn btn-default" title="restart the kernel (with dialog)" data-jupyter-action="jupyter-notebook:confirm-restart-kernel"><i class="fa-repeat fa"></i></button></div><select id="cell_type" class="form-control select-xs"><option value="code">Code</option><option value="markdown">Markdown</option><option value="raw">Raw NBConvert</option><option value="heading">Heading</option><option value="multiselect" disabled="disabled" style="display: none;">-</option></select><div class="btn-group"><button class="btn btn-default" title="open the command palette" data-jupyter-action="jupyter-notebook:show-command-palette"><i class="fa-keyboard-o fa"></i></button></div><div class="btn-group"><button title="show new celltoolbar selector location" class="btn btn-default">CellToolbar</button></div></div>
  </div>
</div>
</div>

<div class="lower-header-bar"></div>

</div>

<div id="site" style="height: 560px; display: block;">


<div id="ipython-main-app">
    <div id="notebook_panel">
        <div id="notebook" tabindex="-1"><div class="container" id="notebook-container"><div class="cell text_cell rendered selected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59659px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 478px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-1"># Bayesian Networks Part Two</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">(The main notbook are reused from pgmpy package.)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This section will be about obtaining a Bayesian network, given a set of sample data. Learning a Bayesian network can be split into two problems:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-strong">**Parameter learning:**</span> Given a set of data samples and a DAG that captures the dependencies between the variables, estimate the (conditional) probability distributions of the individual variables.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-strong">**Structure learning:**</span> Given a set of data samples, estimate a DAG that captures the dependencies between the variables.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This notebook aims to illustrate how parameter learning and structure learning can be done with pgmpy.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Currently, the library supports:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-variable-2">- Parameter learning for </span><span class="cm-em cm-variable-2">*discrete*</span><span class="cm-variable-2"> nodes:</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; <span class="cm-variable-3">- Maximum Likelihood Estimation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; <span class="cm-variable-2">- Bayesian Estimation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-variable-2">- Structure learning for </span><span class="cm-em cm-variable-2">*discrete*</span><span class="cm-variable-2">, </span><span class="cm-em cm-variable-2">*fully observed*</span><span class="cm-variable-2"> networks:</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; <span class="cm-variable-3">- Score-based structure estimation (BIC/BDeu/K2 score; exhaustive search, hill climb/tabu search)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; <span class="cm-variable-2">- Constraint-based structure estimation (PC)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Parameter Learning</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Suppose we have the following data:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 478px;"></div><div class="CodeMirror-gutters" style="display: none; height: 508px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h1 id="Bayesian-Networks-Part-Two">Bayesian Networks Part Two<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Bayesian-Networks-Part-Two">¶</a></h1>
<p>(The main notbook are reused from pgmpy package.)</p>
<p>This section will be about obtaining a Bayesian network, given a set of sample data. Learning a Bayesian network can be split into two problems:</p>
<p> <strong>Parameter learning:</strong> Given a set of data samples and a DAG that captures the dependencies between the variables, estimate the (conditional) probability distributions of the individual variables.</p>
<p> <strong>Structure learning:</strong> Given a set of data samples, estimate a DAG that captures the dependencies between the variables.</p>
<p>This notebook aims to illustrate how parameter learning and structure learning can be done with pgmpy.
Currently, the library supports:</p>
<ul>
<li>Parameter learning for <em>discrete</em> nodes:<ul>
<li>Maximum Likelihood Estimation</li>
<li>Bayesian Estimation</li>
</ul>
</li>
<li>Structure learning for <em>discrete</em>, <em>fully observed</em> networks:<ul>
<li>Score-based structure estimation (BIC/BDeu/K2 score; exhaustive search, hill climb/tabu search)</li>
<li>Constraint-based structure estimation (PC)</li>
</ul>
</li>
</ul>
<h2 id="Parameter-Learning">Parameter Learning<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Parameter-Learning">¶</a></h2>
<p>Suppose we have the following data:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[8]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59662px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 876.608px; margin-bottom: 0px; border-right-width: 30px; min-height: 142px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">pandas</span> <span class="cm-keyword">as</span> <span class="cm-variable">pd</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">data</span>={<span class="cm-string">'fruit'</span>: [<span class="cm-string">"banana"</span>, <span class="cm-string">"apple"</span>, <span class="cm-string">"banana"</span>, <span class="cm-string">"apple"</span>, <span class="cm-string">"banana"</span>,<span class="cm-string">"apple"</span>, <span class="cm-string">"banana"</span>, </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-string">"apple"</span>, <span class="cm-string">"apple"</span>, <span class="cm-string">"apple"</span>, <span class="cm-string">"banana"</span>, <span class="cm-string">"banana"</span>, <span class="cm-string">"apple"</span>, <span class="cm-string">"banana"</span>,], </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                          <span class="cm-string">'tasty'</span>: [<span class="cm-string">"yes"</span>, <span class="cm-string">"no"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"yes"</span>, <span class="cm-string">"no"</span>, <span class="cm-string">"no"</span>, <span class="cm-string">"no"</span>], </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                          <span class="cm-string">'size'</span>: [<span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"small"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-string">"small"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"large"</span>, <span class="cm-string">"small"</span>, <span class="cm-string">"small"</span>]})</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">data</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 142px;"></div><div class="CodeMirror-gutters" style="display: none; height: 172px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>     fruit   size tasty
0   banana  large   yes
1    apple  large    no
2   banana  large   yes
3    apple  small   yes
4   banana  large   yes
5    apple  large   yes
6   banana  large   yes
7    apple  small   yes
8    apple  large   yes
9    apple  large   yes
10  banana  large   yes
11  banana  large    no
12   apple  small    no
13  banana  small    no
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59656px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 27px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">We know that the variables relate as follows:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 27px;"></div><div class="CodeMirror-gutters" style="display: none; height: 57px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>We know that the variables relate as follows:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[9]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59656px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 742.091px; margin-bottom: 0px; border-right-width: 30px; min-height: 60px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">models</span> <span class="cm-keyword">import</span> <span class="cm-variable">BayesianModel</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span> = <span class="cm-variable">BayesianModel</span>([(<span class="cm-string">'fruit'</span>, <span class="cm-string">'tasty'</span>), (<span class="cm-string">'size'</span>, <span class="cm-string">'tasty'</span>)])  <span class="cm-comment"># fruit -&gt; tasty &lt;- size</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 60px;"></div><div class="CodeMirror-gutters" style="display: none; height: 90px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 126px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Parameter learning is the task to estimate the values of the conditional probability distributions (CPDs), for the variables <span class="cm-comment">`fruit`</span>, <span class="cm-comment">`size`</span>, and <span class="cm-comment">`tasty`</span>. </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### State counts</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">To make sense of the given data, we can start by counting how often each state of the variable occurs. If the variable is dependent on parents, the counts are done conditionally on the parents states, i.e. for seperately for each parent configuration:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 126px;"></div><div class="CodeMirror-gutters" style="display: none; height: 156px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Parameter learning is the task to estimate the values of the conditional probability distributions (CPDs), for the variables <code>fruit</code>, <code>size</code>, and <code>tasty</code>. </p>
<h4 id="State-counts">State counts<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#State-counts">¶</a></h4>
<p>To make sense of the given data, we can start by counting how often each state of the variable occurs. If the variable is dependent on parents, the counts are done conditionally on the parents states, i.e. for seperately for each parent configuration:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[10]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59656px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 591.011px; margin-bottom: 0px; border-right-width: 30px; min-height: 76px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">ParameterEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">pe</span> = <span class="cm-variable">ParameterEstimator</span>(<span class="cm-variable">model</span>, <span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"\n"</span>, <span class="cm-variable">pe</span>.<span class="cm-variable">state_counts</span>(<span class="cm-string">'fruit'</span>))  <span class="cm-comment"># unconditional</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"\n"</span>, <span class="cm-variable">pe</span>.<span class="cm-variable">state_counts</span>(<span class="cm-string">'tasty'</span>))  <span class="cm-comment"># conditional on fruit and size</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 76px;"></div><div class="CodeMirror-gutters" style="display: none; height: 106px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>('\n',         fruit
apple       7
banana      7)
('\n', fruit apple       banana      
size  large small  large small
tasty                         
no      1.0   1.0    1.0   1.0
yes     3.0   2.0    5.0   0.0)
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59656px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 208px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">We can see, for example, that as many apples as bananas were observed and that <span class="cm-comment">`5`</span> large bananas were tasty, while only <span class="cm-comment">`1`</span> was not.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### Maximum Likelihood Estimation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">A natural estimate for the CPDs is to simply use the <span class="cm-em">*relative frequencies*</span>, with which the variable states have occured. We observed <span class="cm-comment">`7 apples`</span> among a total of <span class="cm-comment">`14 fruits`</span>, so we might guess that about <span class="cm-comment">`50%`</span> of <span class="cm-comment">`fruits`</span> are <span class="cm-comment">`apples`</span>.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This approach is <span class="cm-em">*Maximum Likelihood Estimation (MLE)*</span>. According to MLE, we should fill the CPDs in such a way, that <span class="cm-delimit cm-delimit-open">$</span>P(<span class="cm-tag">\text</span><span class="cm-bracket">{</span>data<span class="cm-bracket">}</span>|<span class="cm-tag">\text</span><span class="cm-bracket">{</span>model<span class="cm-bracket">}</span>)<span class="cm-delimit cm-delimit-close">$</span> is maximal. This is achieved when using the <span class="cm-em">*relative frequencies*</span>. See [1], section 17.1 for an introduction to ML parameter estimation. pgmpy supports MLE as follows:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 208px;"></div><div class="CodeMirror-gutters" style="display: none; height: 238px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>We can see, for example, that as many apples as bananas were observed and that <code>5</code> large bananas were tasty, while only <code>1</code> was not.</p>
<h4 id="Maximum-Likelihood-Estimation">Maximum Likelihood Estimation<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Maximum-Likelihood-Estimation">¶</a></h4>
<p>A natural estimate for the CPDs is to simply use the <em>relative frequencies</em>, with which the variable states have occured. We observed <code>7 apples</code> among a total of <code>14 fruits</code>, so we might guess that about <code>50%</code> of <code>fruits</code> are <code>apples</code>.</p>
<p>This approach is <em>Maximum Likelihood Estimation (MLE)</em>. According to MLE, we should fill the CPDs in such a way, that $P(\text{data}|\text{model})$ is maximal. This is achieved when using the <em>relative frequencies</em>. See [1], section 17.1 for an introduction to ML parameter estimation. pgmpy supports MLE as follows:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[11]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 464.818px; margin-bottom: 0px; border-right-width: 30px; min-height: 76px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3636px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">MaximumLikelihoodEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">mle</span> = <span class="cm-variable">MaximumLikelihoodEstimator</span>(<span class="cm-variable">model</span>, <span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">mle</span>.<span class="cm-variable">estimate_cpd</span>(<span class="cm-string">'fruit'</span>))  <span class="cm-comment"># unconditional</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">mle</span>.<span class="cm-variable">estimate_cpd</span>(<span class="cm-string">'tasty'</span>))  <span class="cm-comment"># conditional</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 76px;"></div><div class="CodeMirror-gutters" style="display: none; height: 106px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>+---------------+-----+
| fruit(apple)  | 0.5 |
+---------------+-----+
| fruit(banana) | 0.5 |
+---------------+-----+
+------------+--------------+----------------+----------------+---------------+
| fruit      | fruit(apple) | fruit(apple)   | fruit(banana)  | fruit(banana) |
+------------+--------------+----------------+----------------+---------------+
| size       | size(large)  | size(small)    | size(large)    | size(small)   |
+------------+--------------+----------------+----------------+---------------+
| tasty(no)  | 0.25         | 0.333333333333 | 0.166666666667 | 1.0           |
+------------+--------------+----------------+----------------+---------------+
| tasty(yes) | 0.75         | 0.666666666667 | 0.833333333333 | 0.0           |
+------------+--------------+----------------+----------------+---------------+
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 93px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3635px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">`mle.estimate_cpd(variable)`</span> computes the state counts and divides each cell by the (conditional) sample size. The <span class="cm-comment">`mle.get_parameters()`</span>-method returns a list of CPDs for all variable of the model.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The built-in <span class="cm-comment">`fit()`</span>-method of <span class="cm-comment">`BayesianModel`</span> provides more convenient access to parameter estimators:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 93px;"></div><div class="CodeMirror-gutters" style="display: none; height: 123px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><code>mle.estimate_cpd(variable)</code> computes the state counts and divides each cell by the (conditional) sample size. The <code>mle.get_parameters()</code>-method returns a list of CPDs for all variable of the model.</p>
<p>The built-in <code>fit()</code>-method of <code>BayesianModel</code> provides more convenient access to parameter estimators:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[12]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 464.818px; margin-bottom: 0px; border-right-width: 30px; min-height: 93px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3635px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Calibrate all CPDs of `model` using MLE:</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">MaximumLikelihoodEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">mle</span> = <span class="cm-variable">MaximumLikelihoodEstimator</span>(<span class="cm-variable">model</span>, <span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">mle</span>.<span class="cm-variable">estimate_cpd</span>(<span class="cm-string">'fruit'</span>))  <span class="cm-comment"># unconditional</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">mle</span>.<span class="cm-variable">estimate_cpd</span>(<span class="cm-string">'tasty'</span>))  <span class="cm-comment"># conditional</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 93px;"></div><div class="CodeMirror-gutters" style="display: none; height: 123px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>+---------------+-----+
| fruit(apple)  | 0.5 |
+---------------+-----+
| fruit(banana) | 0.5 |
+---------------+-----+
+------------+--------------+----------------+----------------+---------------+
| fruit      | fruit(apple) | fruit(apple)   | fruit(banana)  | fruit(banana) |
+------------+--------------+----------------+----------------+---------------+
| size       | size(large)  | size(small)    | size(large)    | size(small)   |
+------------+--------------+----------------+----------------+---------------+
| tasty(no)  | 0.25         | 0.333333333333 | 0.166666666667 | 1.0           |
+------------+--------------+----------------+----------------+---------------+
| tasty(yes) | 0.75         | 0.666666666667 | 0.833333333333 | 0.0           |
+------------+--------------+----------------+----------------+---------------+
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 552px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3635px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">While very straightforward, the ML estimator has the problem of <span class="cm-em">*overfitting*</span> to the data. In above CPD, the probability of a large banana being tasty is estimated at <span class="cm-comment">`0.833`</span>, because <span class="cm-comment">`5`</span> out of <span class="cm-comment">`6`</span> observed large bananas were tasty. Fine. But note that the probability of a small banana being tasty is estimated at <span class="cm-comment">`0.0`</span>, because we  observed only one small banana and it happened to be not tasty. But that should hardly make us certain that small bananas aren't tasty!</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">We simply do not have enough observations to rely on the observed frequencies. If the observed data is not representative for the underlying distribution, ML estimations will be extremly far off. </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">When estimating parameters for Bayesian networks, lack of data is a frequent problem. Even if the total sample size is very large, the fact that state counts are done conditionally for each parents configuration causes immense fragmentation. If a variable has 3 parents that can each take 10 states, then state counts will be done seperately for <span class="cm-comment">`10^3 = 1000`</span> parents configurations. This makes MLE very fragile and unstable for learning Bayesian Network parameters. A way to mitigate MLE's overfitting is <span class="cm-em">*Bayesian Parameter Estimation*</span>.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### Bayesian Parameter Estimation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The Bayesian Parameter Estimator starts with already existing prior CPDs, that express our beliefs about the variables <span class="cm-em">*before*</span> the data was observed. Those "priors" are then updated, using the state counts from the observed data. See [1], Section 17.3 for a general introduction to Bayesian estimators.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">One can think of the priors as consisting in <span class="cm-em">*pseudo state counts*</span>, that are added to the actual counts before normalization.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Unless one wants to encode specific beliefs about the distributions of the variables, one commonly chooses uniform priors, i.e. ones that deem all states equiprobable.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">A very simple prior is the so-called <span class="cm-em">*K2*</span> prior, which simply adds <span class="cm-comment">`1`</span> to the count of every single state.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">A somewhat more sensible choice of prior is <span class="cm-em">*BDeu*</span> (Bayesian Dirichlet equivalent uniform prior). For BDeu we need to specify an <span class="cm-em">*equivalent sample size*</span> <span class="cm-comment">`N`</span> and then the pseudo-counts are the equivalent of having observed <span class="cm-comment">`N`</span> uniform samples of each variable (and each parent configuration). In pgmpy:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 552px;"></div><div class="CodeMirror-gutters" style="display: none; height: 582px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>While very straightforward, the ML estimator has the problem of <em>overfitting</em> to the data. In above CPD, the probability of a large banana being tasty is estimated at <code>0.833</code>, because <code>5</code> out of <code>6</code> observed large bananas were tasty. Fine. But note that the probability of a small banana being tasty is estimated at <code>0.0</code>, because we  observed only one small banana and it happened to be not tasty. But that should hardly make us certain that small bananas aren't tasty!
We simply do not have enough observations to rely on the observed frequencies. If the observed data is not representative for the underlying distribution, ML estimations will be extremly far off. </p>
<p>When estimating parameters for Bayesian networks, lack of data is a frequent problem. Even if the total sample size is very large, the fact that state counts are done conditionally for each parents configuration causes immense fragmentation. If a variable has 3 parents that can each take 10 states, then state counts will be done seperately for <code>10^3 = 1000</code> parents configurations. This makes MLE very fragile and unstable for learning Bayesian Network parameters. A way to mitigate MLE's overfitting is <em>Bayesian Parameter Estimation</em>.</p>
<h4 id="Bayesian-Parameter-Estimation">Bayesian Parameter Estimation<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Bayesian-Parameter-Estimation">¶</a></h4>
<p>The Bayesian Parameter Estimator starts with already existing prior CPDs, that express our beliefs about the variables <em>before</em> the data was observed. Those "priors" are then updated, using the state counts from the observed data. See [1], Section 17.3 for a general introduction to Bayesian estimators.</p>
<p>One can think of the priors as consisting in <em>pseudo state counts</em>, that are added to the actual counts before normalization.
Unless one wants to encode specific beliefs about the distributions of the variables, one commonly chooses uniform priors, i.e. ones that deem all states equiprobable.</p>
<p>A very simple prior is the so-called <em>K2</em> prior, which simply adds <code>1</code> to the count of every single state.
A somewhat more sensible choice of prior is <em>BDeu</em> (Bayesian Dirichlet equivalent uniform prior). For BDeu we need to specify an <em>equivalent sample size</em> <code>N</code> and then the pseudo-counts are the equivalent of having observed <code>N</code> uniform samples of each variable (and each parent configuration). In pgmpy:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[13]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59644px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 658.185px; margin-bottom: 0px; border-right-width: 30px; min-height: 76px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3635px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">BayesianEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">est</span> = <span class="cm-variable">BayesianEstimator</span>(<span class="cm-variable">model</span>, <span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">estimate_cpd</span>(<span class="cm-string">'tasty'</span>, <span class="cm-variable">prior_type</span>=<span class="cm-string">'BDeu'</span>, <span class="cm-variable">equivalent_sample_size</span>=<span class="cm-number">10</span>))</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 76px;"></div><div class="CodeMirror-gutters" style="display: none; height: 106px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>+------------+----------------+----------------+----------------+----------------+
| fruit      | fruit(apple)   | fruit(apple)   | fruit(banana)  | fruit(banana)  |
+------------+----------------+----------------+----------------+----------------+
| size       | size(large)    | size(small)    | size(large)    | size(small)    |
+------------+----------------+----------------+----------------+----------------+
| tasty(no)  | 0.346153846154 | 0.409090909091 | 0.264705882353 | 0.642857142857 |
+------------+----------------+----------------+----------------+----------------+
| tasty(yes) | 0.653846153846 | 0.590909090909 | 0.735294117647 | 0.357142857143 |
+------------+----------------+----------------+----------------+----------------+
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59644px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 109px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The estimated values in the CPDs are now more conservative. In particular, the estimate for a small banana being not tasty is now around <span class="cm-comment">`0.64`</span> rather than <span class="cm-comment">`1.0`</span>. Setting <span class="cm-comment">`equivalent_sample_size`</span> to <span class="cm-comment">`10`</span> means that for each parent configuration, we add the equivalent of 10 uniform samples (here: <span class="cm-comment">`+5`</span> small bananas that are tasty and <span class="cm-comment">`+5`</span> that aren't).</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">`BayesianEstimator`</span>, too, can be used via the <span class="cm-comment">`fit()`</span>-method. Full example:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 109px;"></div><div class="CodeMirror-gutters" style="display: none; height: 139px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>The estimated values in the CPDs are now more conservative. In particular, the estimate for a small banana being not tasty is now around <code>0.64</code> rather than <code>1.0</code>. Setting <code>equivalent_sample_size</code> to <code>10</code> means that for each parent configuration, we add the equivalent of 10 uniform samples (here: <code>+5</code> small bananas that are tasty and <code>+5</code> that aren't).</p>
<p><code>BayesianEstimator</code>, too, can be used via the <code>fit()</code>-method. Full example:</p>
</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 438px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.2727px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-5">##### Parameters</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-hr">----------</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">prior_type: 'dirichlet', 'BDeu', or 'K2'</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">string indicting which type of prior to use for the model parameters.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- If 'prior_type' is 'dirichlet', the following must be provided:</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">'pseudo_counts' = dirichlet hyperparameters; a dict containing, for each variable, a list with a "virtual" count for each variable state, that is added to the state counts.(lexicographic ordering of states assumed)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- If 'prior_type' is 'BDeu', then an 'equivalent_sample_size' must be specified instead of 'pseudo_counts'. This is equivalent to 'prior_type=dirichlet' and using uniform 'pseudo_counts' of </span><span class="cm-comment cm-variable-2">`equivalent_sample_size/(node_cardinality*np.pro(parents_cardinalities))`</span><span class="cm-variable-2"> for each node.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">'equivalent_sample_size' can either be a numerical value or a dict that specifies the size for each variable seperately.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- A prior_type of 'K2' is a shorthand for 'dirichlet' + setting every pseudo_count to 1,regardless of the cardinality of the variable.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-5">##### Returns</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-hr">-------</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">parameters: list</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">List of TabularCPDs, one for each variable of the model</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 438px;"></div><div class="CodeMirror-gutters" style="display: none; height: 468px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h5 id="Parameters">Parameters<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Parameters">¶</a></h5>
<hr>
<p>prior_type: 'dirichlet', 'BDeu', or 'K2'</p>
<p>string indicting which type of prior to use for the model parameters.</p>
<ul>
<li>If 'prior_type' is 'dirichlet', the following must be provided:</li>
</ul>
<p>'pseudo_counts' = dirichlet hyperparameters; a dict containing, for each variable, a list with a "virtual" count for each variable state, that is added to the state counts.(lexicographic ordering of states assumed)</p>
<ul>
<li><p>If 'prior_type' is 'BDeu', then an 'equivalent_sample_size' must be specified instead of 'pseudo_counts'. This is equivalent to 'prior_type=dirichlet' and using uniform 'pseudo_counts' of <code>equivalent_sample_size/(node_cardinality*np.pro(parents_cardinalities))</code> for each node.
'equivalent_sample_size' can either be a numerical value or a dict that specifies the size for each variable seperately.</p>
</li>
<li><p>A prior_type of 'K2' is a shorthand for 'dirichlet' + setting every pseudo_count to 1,regardless of the cardinality of the variable.</p>
</li>
</ul>
<h5 id="Returns">Returns<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Returns">¶</a></h5>
<hr>
<p>parameters: list</p>
<p>List of TabularCPDs, one for each variable of the model</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[14]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 834.42px; margin-bottom: 0px; border-right-width: 30px; min-height: 240px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3635px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">pandas</span> <span class="cm-keyword">as</span> <span class="cm-variable">pd</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">models</span> <span class="cm-keyword">import</span> <span class="cm-variable">BayesianModel</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">BayesianEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># generate data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">randint</span>(<span class="cm-variable">low</span>=<span class="cm-number">0</span>, <span class="cm-variable">high</span>=<span class="cm-number">2</span>, <span class="cm-variable">size</span>=(<span class="cm-number">5000</span>, <span class="cm-number">4</span>)), <span class="cm-variable">columns</span>=[<span class="cm-string">'A'</span>, <span class="cm-string">'B'</span>, <span class="cm-string">'C'</span>, <span class="cm-string">'D'</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span> = <span class="cm-variable">BayesianModel</span>([(<span class="cm-string">'A'</span>, <span class="cm-string">'B'</span>), (<span class="cm-string">'A'</span>, <span class="cm-string">'C'</span>), (<span class="cm-string">'D'</span>, <span class="cm-string">'C'</span>), (<span class="cm-string">'B'</span>, <span class="cm-string">'D'</span>)])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span>.<span class="cm-variable">fit</span>(<span class="cm-variable">data</span>, <span class="cm-variable">estimator</span>=<span class="cm-variable">BayesianEstimator</span>, <span class="cm-variable">prior_type</span>=<span class="cm-string">'BDeu'</span>, <span class="cm-variable">equivalent_sample_size</span>=<span class="cm-number">100</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">for</span> <span class="cm-variable">cpd</span> <span class="cm-keyword">in</span> <span class="cm-variable">model</span>.<span class="cm-variable">get_cpds</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-string">"CPD of {variable}:"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">variable</span>=<span class="cm-variable">cpd</span>.<span class="cm-variable">variable</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-variable">cpd</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 240px;"></div><div class="CodeMirror-gutters" style="display: none; height: 270px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>CPD of A:
+------+----------+
| A(0) | 0.499804 |
+------+----------+
| A(1) | 0.500196 |
+------+----------+
CPD of C:
+------+---------------+----------------+----------------+---------------+
| A    | A(0)          | A(0)           | A(1)           | A(1)          |
+------+---------------+----------------+----------------+---------------+
| D    | D(0)          | D(1)           | D(0)           | D(1)          |
+------+---------------+----------------+----------------+---------------+
| C(0) | 0.50039556962 | 0.511673151751 | 0.484645669291 | 0.49843871975 |
+------+---------------+----------------+----------------+---------------+
| C(1) | 0.49960443038 | 0.488326848249 | 0.515354330709 | 0.50156128025 |
+------+---------------+----------------+----------------+---------------+
CPD of B:
+------+----------------+--------------+
| A    | A(0)           | A(1)         |
+------+----------------+--------------+
| B(0) | 0.488426834053 | 0.5049000392 |
+------+----------------+--------------+
| B(1) | 0.511573165947 | 0.4950999608 |
+------+----------------+--------------+
CPD of D:
+------+----------------+---------------+
| B    | B(0)           | B(1)          |
+------+----------------+---------------+
| D(0) | 0.498223450454 | 0.49552006233 |
+------+----------------+---------------+
| D(1) | 0.501776549546 | 0.50447993767 |
+------+----------------+---------------+
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[15]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 817.787px; margin-bottom: 0px; border-right-width: 30px; min-height: 93px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">pseudo_counts</span> = {<span class="cm-string">'A'</span>: [<span class="cm-number">3000</span>, <span class="cm-number">7000</span>], <span class="cm-string">'B'</span>: [<span class="cm-number">700</span>, <span class="cm-number">300</span>], <span class="cm-string">'C'</span>: [<span class="cm-number">800</span>, <span class="cm-number">200</span>], <span class="cm-string">'D'</span>: [<span class="cm-number">500</span>, <span class="cm-number">500</span>]}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span>.<span class="cm-variable">fit</span>(<span class="cm-variable">data</span>, <span class="cm-variable">estimator</span>=<span class="cm-variable">BayesianEstimator</span>, <span class="cm-variable">prior_type</span>=<span class="cm-string">'dirichlet'</span>, <span class="cm-variable">pseudo_counts</span>=<span class="cm-variable">pseudo_counts</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">for</span> <span class="cm-variable">cpd</span> <span class="cm-keyword">in</span> <span class="cm-variable">model</span>.<span class="cm-variable">get_cpds</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-string">"CPD of {variable}:"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">variable</span>=<span class="cm-variable">cpd</span>.<span class="cm-variable">variable</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-variable">cpd</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 93px;"></div><div class="CodeMirror-gutters" style="display: none; height: 123px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stderr"><pre>WARNING:root:Replacing existing CPD for A
WARNING:root:Replacing existing CPD for C
WARNING:root:Replacing existing CPD for B
WARNING:root:Replacing existing CPD for D
</pre></div></div><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>CPD of A:
+------+--------+
| A(0) | 0.3666 |
+------+--------+
| A(1) | 0.6334 |
+------+--------+
CPD of C:
+------+----------------+----------------+----------------+----------------+
| A    | A(0)           | A(0)           | A(1)           | A(1)           |
+------+----------------+----------------+----------------+----------------+
| D    | D(0)           | D(1)           | D(0)           | D(1)           |
+------+----------------+----------------+----------------+----------------+
| C(0) | 0.634211701653 | 0.639380530973 | 0.624944320713 | 0.632092198582 |
+------+----------------+----------------+----------------+----------------+
| C(1) | 0.365788298347 | 0.360619469027 | 0.375055679287 | 0.367907801418 |
+------+----------------+----------------+----------------+----------------+
CPD of B:
+------+----------------+---------------+
| A    | A(0)           | A(1)          |
+------+----------------+---------------+
| B(0) | 0.548728208059 | 0.56069694373 |
+------+----------------+---------------+
| B(1) | 0.451271791941 | 0.43930305627 |
+------+----------------+---------------+
CPD of D:
+------+----------------+----------------+
| B    | B(0)           | B(1)           |
+------+----------------+----------------+
| D(0) | 0.498708010336 | 0.496730167757 |
+------+----------------+----------------+
| D(1) | 0.501291989664 | 0.503269832243 |
+------+----------------+----------------+
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 29px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 18.1816px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Practice One:</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 29px;"></div><div class="CodeMirror-gutters" style="display: none; height: 59px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Practice-One:">Practice One:<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Practice-One:">¶</a></h3>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[16]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 498.455px; margin-bottom: 0px; border-right-width: 30px; min-height: 191px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">seed</span>(<span class="cm-number">100</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">raw_data</span> = <span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">randint</span>(<span class="cm-variable">low</span>=<span class="cm-number">0</span>, <span class="cm-variable">high</span>=<span class="cm-number">2</span>, <span class="cm-variable">size</span>=(<span class="cm-number">1000</span>, <span class="cm-number">3</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">raw_data</span>, <span class="cm-variable">columns</span>=[<span class="cm-string">'D'</span>, <span class="cm-string">'I'</span>, <span class="cm-string">'G'</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>.<span class="cm-variable">D</span>=<span class="cm-variable">data</span>.<span class="cm-variable">I</span><span class="cm-operator">+</span><span class="cm-variable">data</span>.<span class="cm-variable">G</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">seed</span>(<span class="cm-number">1000</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">raw_data</span> = <span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">randint</span>(<span class="cm-variable">low</span>=<span class="cm-number">0</span>, <span class="cm-variable">high</span>=<span class="cm-number">2</span>, <span class="cm-variable">size</span>=(<span class="cm-number">20</span>, <span class="cm-number">3</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data_test</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">raw_data</span>, <span class="cm-variable">columns</span>=[<span class="cm-string">'D'</span>, <span class="cm-string">'I'</span>, <span class="cm-string">'G'</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data_test</span>.<span class="cm-variable">I</span>=<span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data_test</span>.<span class="cm-variable">D</span>=<span class="cm-variable">data_test</span>.<span class="cm-variable">I</span><span class="cm-operator">+</span><span class="cm-variable">data_test</span>.<span class="cm-variable">G</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">data</span>.<span class="cm-variable">head</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span> = <span class="cm-variable">BayesianModel</span>([(<span class="cm-string">"I"</span>,<span class="cm-string">"D"</span>),(<span class="cm-string">"G"</span>,<span class="cm-string">"D"</span>)])</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 191px;"></div><div class="CodeMirror-gutters" style="display: none; height: 221px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>   D  I  G
0  1  0  1
1  2  1  1
2  0  0  0
3  1  0  1
4  0  0  0
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[17]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 120.273px; margin-bottom: 0px; border-right-width: 30px; min-height: 27px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-operator">?</span><span class="cm-variable">model</span>.<span class="cm-variable">predict</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 27px;"></div><div class="CodeMirror-gutters" style="display: none; height: 57px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 211px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 18.1816px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Q1. Please fit the data using BayesianEstimator. What are your CPDs. (use BDeu: 100 for example)? </span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Q2. </span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">a) Predict "G" using "I" by your model. What is the OS accuracy of prediction? What if use "I" and "D"?</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">b) Predict "D" using "G" by your model. What is the OS accuracy of prediction? What if use "I" and "G"?</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">c) What if you have the following sampling observations as prior?</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">pseudo_counts = {'D': [2000,1000,2000], 'I': [300, 700], 'G': [100, 100]}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 211px;"></div><div class="CodeMirror-gutters" style="display: none; height: 241px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Q1.-Please-fit-the-data-using-BayesianEstimator.-What-are-your-CPDs.-(use-BDeu:-100-for-example)?">Q1. Please fit the data using BayesianEstimator. What are your CPDs. (use BDeu: 100 for example)?<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Q1.-Please-fit-the-data-using-BayesianEstimator.-What-are-your-CPDs.-(use-BDeu:-100-for-example)?">¶</a></h3>
<h3 id="Q2.">Q2.<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Q2.">¶</a></h3>
<p>a) Predict "G" using "I" by your model. What is the OS accuracy of prediction? What if use "I" and "D"?</p>
<p>b) Predict "D" using "G" by your model. What is the OS accuracy of prediction? What if use "I" and "G"?</p>
<p>c) What if you have the following sampling observations as prior?</p>
<p>pseudo_counts = {'D': [2000,1000,2000], 'I': [300, 700], 'G': [100, 100]}</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[18]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 758.98px; margin-bottom: 0px; border-right-width: 30px; min-height: 76px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span>.<span class="cm-variable">fit</span>(<span class="cm-variable">data</span>, <span class="cm-variable">estimator</span>=<span class="cm-variable">BayesianEstimator</span>, <span class="cm-variable">prior_type</span>=<span class="cm-string">'BDeu'</span>, <span class="cm-variable">equivalent_sample_size</span>=<span class="cm-number">10</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">for</span> <span class="cm-variable">cpd</span> <span class="cm-keyword">in</span> <span class="cm-variable">model</span>.<span class="cm-variable">get_cpds</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-string">"CPD of {variable}:"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">variable</span>=<span class="cm-variable">cpd</span>.<span class="cm-variable">variable</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-variable">cpd</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 76px;"></div><div class="CodeMirror-gutters" style="display: none; height: 106px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>CPD of I:
+------+---------+
| I(0) | 0.50099 |
+------+---------+
| I(1) | 0.49901 |
+------+---------+
CPD of D:
+------+------------------+------------------+------------------+------------------+
| G    | G(0)             | G(0)             | G(1)             | G(1)             |
+------+------------------+------------------+------------------+------------------+
| I    | I(0)             | I(1)             | I(0)             | I(1)             |
+------+------------------+------------------+------------------+------------------+
| D(0) | 0.993698802773   | 0.00309214594929 | 0.00345065562457 | 0.00355366027008 |
+------+------------------+------------------+------------------+------------------+
| D(1) | 0.00315059861374 | 0.993815708101   | 0.993098688751   | 0.00355366027008 |
+------+------------------+------------------+------------------+------------------+
| D(2) | 0.00315059861374 | 0.00309214594929 | 0.00345065562457 | 0.99289267946    |
+------+------------------+------------------+------------------+------------------+
CPD of G:
+------+----------+
| G(0) | 0.528713 |
+------+----------+
| G(1) | 0.471287 |
+------+----------+
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[19]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 649.364px; margin-bottom: 0px; border-right-width: 30px; min-height: 93px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span> (<span class="cm-variable">model</span>.<span class="cm-variable">predict</span>(<span class="cm-variable">data_test</span>.<span class="cm-variable">loc</span>[:,[<span class="cm-string">"I"</span>]]).<span class="cm-variable">G</span><span class="cm-operator">==</span><span class="cm-variable">data_test</span>.<span class="cm-variable">G</span>).<span class="cm-builtin">sum</span>()<span class="cm-operator">*</span><span class="cm-number">1.0</span><span class="cm-operator">/</span><span class="cm-number">20</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span> (<span class="cm-variable">model</span>.<span class="cm-variable">predict</span>(<span class="cm-variable">data_test</span>.<span class="cm-variable">loc</span>[:,[<span class="cm-string">"D"</span>,<span class="cm-string">"I"</span>]]).<span class="cm-variable">G</span><span class="cm-operator">==</span><span class="cm-variable">data_test</span>.<span class="cm-variable">G</span>).<span class="cm-builtin">sum</span>()<span class="cm-operator">*</span><span class="cm-number">1.0</span><span class="cm-operator">/</span><span class="cm-number">20</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span> (<span class="cm-variable">model</span>.<span class="cm-variable">predict</span>(<span class="cm-variable">data_test</span>.<span class="cm-variable">loc</span>[:,[<span class="cm-string">"G"</span>]]).<span class="cm-variable">D</span><span class="cm-operator">==</span><span class="cm-variable">data_test</span>.<span class="cm-variable">D</span>).<span class="cm-builtin">sum</span>()<span class="cm-operator">*</span><span class="cm-number">1.0</span><span class="cm-operator">/</span><span class="cm-number">20</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span> (<span class="cm-variable">model</span>.<span class="cm-variable">predict</span>(<span class="cm-variable">data_test</span>.<span class="cm-variable">loc</span>[:,[<span class="cm-string">"I"</span>,<span class="cm-string">"G"</span>]]).<span class="cm-variable">D</span><span class="cm-operator">==</span><span class="cm-variable">data_test</span>.<span class="cm-variable">D</span>).<span class="cm-builtin">sum</span>()<span class="cm-operator">*</span><span class="cm-number">1.0</span><span class="cm-operator">/</span><span class="cm-number">20</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 93px;"></div><div class="CodeMirror-gutters" style="display: none; height: 123px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>0.7
1.0
0.0
1.0
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[20]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 817.787px; margin-bottom: 0px; border-right-width: 30px; min-height: 158px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span> = <span class="cm-variable">BayesianModel</span>([(<span class="cm-string">"I"</span>,<span class="cm-string">"D"</span>),(<span class="cm-string">"G"</span>,<span class="cm-string">"D"</span>)])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">pseudo_counts</span> = {<span class="cm-string">'D'</span>: [<span class="cm-number">2000</span>,<span class="cm-number">1000</span>,<span class="cm-number">2000</span>], <span class="cm-string">'I'</span>: [<span class="cm-number">300</span>, <span class="cm-number">700</span>], <span class="cm-string">'G'</span>: [<span class="cm-number">100</span>, <span class="cm-number">100</span>]}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span>.<span class="cm-variable">fit</span>(<span class="cm-variable">data</span>, <span class="cm-variable">estimator</span>=<span class="cm-variable">BayesianEstimator</span>, <span class="cm-variable">prior_type</span>=<span class="cm-string">'dirichlet'</span>, <span class="cm-variable">pseudo_counts</span>=<span class="cm-variable">pseudo_counts</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">for</span> <span class="cm-variable">cpd</span> <span class="cm-keyword">in</span> <span class="cm-variable">model</span>.<span class="cm-variable">get_cpds</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-string">"CPD of {variable}:"</span>.<span class="cm-builtin">format</span>(<span class="cm-variable">variable</span>=<span class="cm-variable">cpd</span>.<span class="cm-variable">variable</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-variable">cpd</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span> (<span class="cm-variable">model</span>.<span class="cm-variable">predict</span>(<span class="cm-variable">data_test</span>.<span class="cm-variable">loc</span>[:,[<span class="cm-string">"I"</span>,<span class="cm-string">"G"</span>]]).<span class="cm-variable">D</span><span class="cm-operator">==</span><span class="cm-variable">data_test</span>.<span class="cm-variable">D</span>).<span class="cm-builtin">sum</span>()<span class="cm-operator">*</span><span class="cm-number">1.0</span><span class="cm-operator">/</span><span class="cm-number">20</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 158px;"></div><div class="CodeMirror-gutters" style="display: none; height: 188px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>CPD of I:
+------+--------+
| I(0) | 0.4005 |
+------+--------+
| I(1) | 0.5995 |
+------+--------+
CPD of D:
+------+----------------+----------------+----------------+----------------+
| G    | G(0)           | G(0)           | G(1)           | G(1)           |
+------+----------------+----------------+----------------+----------------+
| I    | I(0)           | I(1)           | I(0)           | I(1)           |
+------+----------------+----------------+----------------+----------------+
| D(0) | 0.429874572406 | 0.379722802354 | 0.381752242794 | 0.382262996942 |
+------+----------------+----------------+----------------+----------------+
| D(1) | 0.190041809198 | 0.240554395291 | 0.236495514411 | 0.191131498471 |
+------+----------------+----------------+----------------+----------------+
| D(2) | 0.380083618396 | 0.379722802354 | 0.381752242794 | 0.426605504587 |
+------+----------------+----------------+----------------+----------------+
CPD of G:
+------+----------+
| G(0) | 0.524167 |
+------+----------+
| G(1) | 0.475833 |
+------+----------+
0.3
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 410px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Structure Learning</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">To learn model structure (a DAG) from a data set, there are two broad techniques:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-variable-2">- score-based structure learning</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-variable-2">- constraint-based structure learning</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">We briefly discuss all approaches and give examples.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Score-based Structure Learning</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This approach construes model selection as an optimization task. It has two building blocks:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- A </span><span class="cm-em cm-variable-2">_scoring function_</span><span class="cm-variable-2"> </span><span class="cm-delimit cm-delimit-open">$</span>s_D<span class="cm-tag">\colon</span> M <span class="cm-tag">\to</span> <span class="cm-tag">\mathbb</span> R<span class="cm-delimit cm-delimit-close">$</span><span class="cm-variable-2"> that maps models to a numerical score, based on how well they fit to a given data set </span><span class="cm-delimit cm-delimit-open">$</span>D<span class="cm-delimit cm-delimit-close">$</span><span class="cm-variable-2">.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- A </span><span class="cm-em cm-variable-2">_search strategy_</span><span class="cm-variable-2"> to traverse the search space of possible models </span><span class="cm-delimit cm-delimit-open">$</span>M<span class="cm-delimit cm-delimit-close">$</span><span class="cm-variable-2"> and select a model with optimal score.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### Scoring functions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Commonly used scores to measure the fit between model and data are <span class="cm-em">_Bayesian Dirichlet scores_</span> such as <span class="cm-em">*BDeu*</span> or <span class="cm-em">*K2*</span> and the <span class="cm-em">_Bayesian Information Criterion_</span> (BIC, also called MDL). See [1], Section 18.3 for a detailed introduction on scores. As before, BDeu is dependent on an equivalent sample size.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 410px;"></div><div class="CodeMirror-gutters" style="display: none; height: 440px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Structure-Learning">Structure Learning<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Structure-Learning">¶</a></h2>
<p>To learn model structure (a DAG) from a data set, there are two broad techniques:</p>
<ul>
<li>score-based structure learning</li>
<li>constraint-based structure learning</li>
</ul>
<p>We briefly discuss all approaches and give examples.</p>
<h3 id="Score-based-Structure-Learning">Score-based Structure Learning<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Score-based-Structure-Learning">¶</a></h3>
<p>This approach construes model selection as an optimization task. It has two building blocks:</p>
<ul>
<li>A <em>scoring function</em> $s_D\colon M \to \mathbb R$ that maps models to a numerical score, based on how well they fit to a given data set $D$.</li>
<li>A <em>search strategy</em> to traverse the search space of possible models $M$ and select a model with optimal score.</li>
</ul>
<h4 id="Scoring-functions">Scoring functions<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Scoring-functions">¶</a></h4>
<p>Commonly used scores to measure the fit between model and data are <em>Bayesian Dirichlet scores</em> such as <em>BDeu</em> or <em>K2</em> and the <em>Bayesian Information Criterion</em> (BIC, also called MDL). See [1], Section 18.3 for a detailed introduction on scores. As before, BDeu is dependent on an equivalent sample size.</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[21]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 674.818px; margin-bottom: 0px; border-right-width: 30px; min-height: 420px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">pandas</span> <span class="cm-keyword">as</span> <span class="cm-variable">pd</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">BdeuScore</span>, <span class="cm-variable">K2Score</span>, <span class="cm-variable">BicScore</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">models</span> <span class="cm-keyword">import</span> <span class="cm-variable">BayesianModel</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># create random data sample with 3 variables, where Z is dependent on X, Y:</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">randint</span>(<span class="cm-number">0</span>, <span class="cm-number">4</span>, <span class="cm-variable">size</span>=(<span class="cm-number">5000</span>, <span class="cm-number">2</span>)), <span class="cm-variable">columns</span>=<span class="cm-builtin">list</span>(<span class="cm-string">'XY'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>[<span class="cm-string">'Z'</span>] = <span class="cm-variable">data</span>[<span class="cm-string">'X'</span>] <span class="cm-operator">+</span> <span class="cm-variable">data</span>[<span class="cm-string">'Y'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">bdeu</span> = <span class="cm-variable">BdeuScore</span>(<span class="cm-variable">data</span>, <span class="cm-variable">equivalent_sample_size</span>=<span class="cm-number">5</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">k2</span> = <span class="cm-variable">K2Score</span>(<span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">bic</span> = <span class="cm-variable">BicScore</span>(<span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model1</span> = <span class="cm-variable">BayesianModel</span>([(<span class="cm-string">'X'</span>, <span class="cm-string">'Z'</span>), (<span class="cm-string">'Y'</span>, <span class="cm-string">'Z'</span>)])  <span class="cm-comment"># X -&gt; Z &lt;- Y</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model2</span> = <span class="cm-variable">BayesianModel</span>([(<span class="cm-string">'X'</span>, <span class="cm-string">'Z'</span>), (<span class="cm-string">'X'</span>, <span class="cm-string">'Y'</span>)])  <span class="cm-comment"># Y &lt;- X -&gt; Z</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bdeu</span>.<span class="cm-variable">score</span>(<span class="cm-variable">model1</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">k2</span>.<span class="cm-variable">score</span>(<span class="cm-variable">model1</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bic</span>.<span class="cm-variable">score</span>(<span class="cm-variable">model1</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bdeu</span>.<span class="cm-variable">score</span>(<span class="cm-variable">model2</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">k2</span>.<span class="cm-variable">score</span>(<span class="cm-variable">model2</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bic</span>.<span class="cm-variable">score</span>(<span class="cm-variable">model2</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 420px;"></div><div class="CodeMirror-gutters" style="display: none; height: 450px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>-13934.6238246
-14325.3581389
-14290.6641388
-20895.3771637
-20922.22821
-20939.4281753
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 60px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3638px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">While the scores vary slightly, we can see that the correct <span class="cm-comment">`model1`</span> has a much higher score than <span class="cm-comment">`model2`</span>.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Importantly, these scores <span class="cm-em">_decompose_</span>, i.e. they can be computed locally for each of the variables given their potential parents, independent of other parts of the network:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 60px;"></div><div class="CodeMirror-gutters" style="display: none; height: 90px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>While the scores vary slightly, we can see that the correct <code>model1</code> has a much higher score than <code>model2</code>.
Importantly, these scores <em>decompose</em>, i.e. they can be computed locally for each of the variables given their potential parents, independent of other parts of the network:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[22]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 405.727px; margin-bottom: 0px; border-right-width: 30px; min-height: 60px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bdeu</span>.<span class="cm-variable">local_score</span>(<span class="cm-string">'Z'</span>, <span class="cm-variable">parents</span>=[]))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bdeu</span>.<span class="cm-variable">local_score</span>(<span class="cm-string">'Z'</span>, <span class="cm-variable">parents</span>=[<span class="cm-string">'X'</span>]))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">bdeu</span>.<span class="cm-variable">local_score</span>(<span class="cm-string">'Z'</span>, <span class="cm-variable">parents</span>=[<span class="cm-string">'X'</span>, <span class="cm-string">'Y'</span>]))</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 60px;"></div><div class="CodeMirror-gutters" style="display: none; height: 90px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>-9246.48803524
-6988.45541056
-57.1166468066
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 143px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.2725px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### Search strategies</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The search space of DAGs is super-exponential in the number of variables and the above scoring functions allow for local maxima. The first property makes exhaustive search intractable for all but very small networks, the second prohibits efficient local optimization algorithms to always find the optimal structure. Thus, identifiying the ideal structure is often not tractable. Despite these bad news, heuristic search strategies often yields good results.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">If only few nodes are involved (read: less than 5), <span class="cm-comment">`ExhaustiveSearch`</span> can be used to compute the score for every DAG and returns the best-scoring one:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 143px;"></div><div class="CodeMirror-gutters" style="display: none; height: 173px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h4 id="Search-strategies">Search strategies<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Search-strategies">¶</a></h4>
<p>The search space of DAGs is super-exponential in the number of variables and the above scoring functions allow for local maxima. The first property makes exhaustive search intractable for all but very small networks, the second prohibits efficient local optimization algorithms to always find the optimal structure. Thus, identifiying the ideal structure is often not tractable. Despite these bad news, heuristic search strategies often yields good results.</p>
<p>If only few nodes are involved (read: less than 5), <code>ExhaustiveSearch</code> can be used to compute the score for every DAG and returns the best-scoring one:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[23]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 397.787px; margin-bottom: 0px; border-right-width: 30px; min-height: 158px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">ExhaustiveSearch</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">es</span> = <span class="cm-variable">ExhaustiveSearch</span>(<span class="cm-variable">data</span>, <span class="cm-variable">scoring_method</span>=<span class="cm-variable">bic</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">best_model</span> = <span class="cm-variable">es</span>.<span class="cm-variable">estimate</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">best_model</span>.<span class="cm-variable">edges</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"\nAll DAGs by score:"</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">for</span> <span class="cm-variable">score</span>, <span class="cm-variable">dag</span> <span class="cm-keyword">in</span> <span class="cm-builtin">reversed</span>(<span class="cm-variable">es</span>.<span class="cm-variable">all_scores</span>()):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span>(<span class="cm-variable">score</span>, <span class="cm-variable">dag</span>.<span class="cm-variable">edges</span>())</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 158px;"></div><div class="CodeMirror-gutters" style="display: none; height: 188px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>[('Y', 'Z'), ('X', 'Z')]

All DAGs by score:
(-14290.664138819098, [('Y', 'Z'), ('X', 'Z')])
(-14324.183352328386, [('Y', 'X'), ('Z', 'Y'), ('Z', 'X')])
(-14324.183352328388, [('Y', 'X'), ('Y', 'Z'), ('Z', 'X')])
(-14324.183352328388, [('Y', 'X'), ('Y', 'Z'), ('X', 'Z')])
(-14324.183352328388, [('X', 'Y'), ('Z', 'Y'), ('Z', 'X')])
(-14324.183352328389, [('X', 'Y'), ('X', 'Z'), ('Z', 'Y')])
(-14324.183352328389, [('Y', 'Z'), ('X', 'Y'), ('X', 'Z')])
(-16547.554933759962, [('Y', 'X'), ('Z', 'X')])
(-16550.498352353869, [('X', 'Y'), ('Z', 'Y')])
(-18682.537380375936, [('Z', 'Y'), ('Z', 'X')])
(-18682.537380375936, [('Y', 'Z'), ('Z', 'X')])
(-18682.537380375936, [('X', 'Z'), ('Z', 'Y')])
(-20905.908961807512, [('Z', 'X')])
(-20905.908961807512, [('X', 'Z')])
(-20908.852380401415, [('Z', 'Y')])
(-20908.852380401415, [('Y', 'Z')])
(-20939.428175316803, [('Y', 'X'), ('X', 'Z')])
(-20939.428175316803, [('X', 'Y'), ('Z', 'X')])
(-20939.428175316803, [('X', 'Y'), ('X', 'Z')])
(-20942.371593910706, [('Y', 'X'), ('Z', 'Y')])
(-20942.371593910706, [('Y', 'X'), ('Y', 'Z')])
(-20942.371593910706, [('Y', 'Z'), ('X', 'Y')])
(-23132.223961832991, [])
(-23165.743175342279, [('Y', 'X')])
(-23165.743175342282, [('X', 'Y')])
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 109px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Once more nodes are involved, one needs to switch to heuristic search. <span class="cm-comment">`HillClimbSearch`</span> implements a greedy local search that starts from the DAG <span class="cm-comment">`start`</span> (default: disconnected DAG) and proceeds by iteratively performing single-edge manipulations that maximally increase the score. The search terminates once a local maximum is found.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 109px;"></div><div class="CodeMirror-gutters" style="display: none; height: 139px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>Once more nodes are involved, one needs to switch to heuristic search. <code>HillClimbSearch</code> implements a greedy local search that starts from the DAG <code>start</code> (default: disconnected DAG) and proceeds by iteratively performing single-edge manipulations that maximally increase the score. The search terminates once a local maximum is found.</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[24]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 725.273px; margin-bottom: 0px; border-right-width: 30px; min-height: 175px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">HillClimbSearch</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># create some data with dependencies</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">randint</span>(<span class="cm-number">0</span>, <span class="cm-number">3</span>, <span class="cm-variable">size</span>=(<span class="cm-number">2500</span>, <span class="cm-number">8</span>)), <span class="cm-variable">columns</span>=<span class="cm-builtin">list</span>(<span class="cm-string">'ABCDEFGH'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>[<span class="cm-string">'A'</span>] += <span class="cm-variable">data</span>[<span class="cm-string">'B'</span>] <span class="cm-operator">+</span> <span class="cm-variable">data</span>[<span class="cm-string">'C'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>[<span class="cm-string">'H'</span>] = <span class="cm-variable">data</span>[<span class="cm-string">'G'</span>] <span class="cm-operator">-</span> <span class="cm-variable">data</span>[<span class="cm-string">'A'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">hc</span> = <span class="cm-variable">HillClimbSearch</span>(<span class="cm-variable">data</span>, <span class="cm-variable">scoring_method</span>=<span class="cm-variable">BicScore</span>(<span class="cm-variable">data</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">best_model</span> = <span class="cm-variable">hc</span>.<span class="cm-variable">estimate</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">best_model</span>.<span class="cm-variable">edges</span>())</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 175px;"></div><div class="CodeMirror-gutters" style="display: none; height: 205px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>[('A', 'C'), ('A', 'B'), ('C', 'B'), ('G', 'A'), ('H', 'A'), ('H', 'G')]
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 374px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The search correctly identifies e.g. that <span class="cm-comment">`B`</span> and <span class="cm-comment">`C`</span> do not influnce <span class="cm-comment">`H`</span> directly, only through <span class="cm-comment">`A`</span> and of course that <span class="cm-comment">`D`</span>, <span class="cm-comment">`E`</span>, <span class="cm-comment">`F`</span> are independent.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">To enforce a wider exploration of the search space, the search can be enhanced with a tabu list. The list keeps track of the last <span class="cm-comment">`n`</span> modfications; those are then not allowed to be reversed, regardless of the score. Additionally a <span class="cm-comment">`white_list`</span> or <span class="cm-comment">`black_list`</span> can be supplied to restrict the search to a particular subset or to exclude certain edges. The parameter <span class="cm-comment">`max_indegree`</span> allows to restrict the maximum number of parents for each node.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Constraint-based Structure Learning</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">A different, but quite straightforward approach to build a DAG from data is this:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">1. Identify independencies in the data set using hypothesis tests </span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">2. Construct DAG (pattern) according to identified independencies</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### (Conditional) Independence Tests</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Independencies in the data can be identified using chi2 conditional independence tests. To this end, constraint-based estimators in pgmpy have a <span class="cm-comment">`test_conditional_independence(X, Y, Zs)`</span>-method, that performs a hypothesis test on the data sample. It allows to check if <span class="cm-comment">`X`</span> is independent from <span class="cm-comment">`Y`</span> given a set of variables <span class="cm-comment">`Zs`</span>:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 374px;"></div><div class="CodeMirror-gutters" style="display: none; height: 404px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>The search correctly identifies e.g. that <code>B</code> and <code>C</code> do not influnce <code>H</code> directly, only through <code>A</code> and of course that <code>D</code>, <code>E</code>, <code>F</code> are independent.</p>
<p>To enforce a wider exploration of the search space, the search can be enhanced with a tabu list. The list keeps track of the last <code>n</code> modfications; those are then not allowed to be reversed, regardless of the score. Additionally a <code>white_list</code> or <code>black_list</code> can be supplied to restrict the search to a particular subset or to exclude certain edges. The parameter <code>max_indegree</code> allows to restrict the maximum number of parents for each node.</p>
<h3 id="Constraint-based-Structure-Learning">Constraint-based Structure Learning<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Constraint-based-Structure-Learning">¶</a></h3>
<p>A different, but quite straightforward approach to build a DAG from data is this:</p>
<ol>
<li>Identify independencies in the data set using hypothesis tests </li>
<li>Construct DAG (pattern) according to identified independencies</li>
</ol>
<h4 id="(Conditional)-Independence-Tests">(Conditional) Independence Tests<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#(Conditional)-Independence-Tests">¶</a></h4>
<p>Independencies in the data can be identified using chi2 conditional independence tests. To this end, constraint-based estimators in pgmpy have a <code>test_conditional_independence(X, Y, Zs)</code>-method, that performs a hypothesis test on the data sample. It allows to check if <code>X</code> is independent from <code>Y</code> given a set of variables <code>Zs</code>:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[25]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 725.273px; margin-bottom: 0px; border-right-width: 30px; min-height: 256px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">ConstraintBasedEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">DataFrame</span>(<span class="cm-variable">np</span>.<span class="cm-variable">random</span>.<span class="cm-variable">randint</span>(<span class="cm-number">0</span>, <span class="cm-number">3</span>, <span class="cm-variable">size</span>=(<span class="cm-number">2500</span>, <span class="cm-number">8</span>)), <span class="cm-variable">columns</span>=<span class="cm-builtin">list</span>(<span class="cm-string">'ABCDEFGH'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>[<span class="cm-string">'A'</span>] += <span class="cm-variable">data</span>[<span class="cm-string">'B'</span>] <span class="cm-operator">+</span> <span class="cm-variable">data</span>[<span class="cm-string">'C'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>[<span class="cm-string">'H'</span>] = <span class="cm-variable">data</span>[<span class="cm-string">'G'</span>] <span class="cm-operator">-</span> <span class="cm-variable">data</span>[<span class="cm-string">'A'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>[<span class="cm-string">'E'</span>] *= <span class="cm-variable">data</span>[<span class="cm-string">'F'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">est</span> = <span class="cm-variable">ConstraintBasedEstimator</span>(<span class="cm-variable">data</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'C'</span>))          <span class="cm-comment"># independent</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'H'</span>))          <span class="cm-comment"># dependent</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'E'</span>))          <span class="cm-comment"># independent</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'H'</span>, [<span class="cm-string">'A'</span>]))   <span class="cm-comment"># independent</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-string">'A'</span>, <span class="cm-string">'G'</span>))          <span class="cm-comment"># independent</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-string">'A'</span>, <span class="cm-string">'G'</span>,  [<span class="cm-string">'H'</span>]))  <span class="cm-comment"># dependent</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 256px;"></div><div class="CodeMirror-gutters" style="display: none; height: 286px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>(1.7458642800596729, 0.98783644838898632, True)
(669.65055482303819, 1.6615465800288878e-124, True)
(2.0506421131182382, 0.99830988455518577, True)
(9.038666747654533, 0.99999999689457031, True)
(10.54523288135092, 0.95717478959691427, True)
(4628.0, 0.0, True)
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 109px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3643px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">`test_conditional_independence()`</span> returns a tripel <span class="cm-comment">`(chi2, p_value, sufficient_data)`</span>, consisting in the computed chi2 test statistic, the <span class="cm-comment">`p_value`</span> of the test, and a heuristig flag that indicates if the sample size was sufficient. The <span class="cm-comment">`p_value`</span> is the probability of observing the computed chi2 statistic (or an even higher chi2 value), given the null hypothesis that X and Y are independent given Zs.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This can be used to make independence judgements, at a given level of significance:</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 109px;"></div><div class="CodeMirror-gutters" style="display: none; height: 139px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p><code>test_conditional_independence()</code> returns a tripel <code>(chi2, p_value, sufficient_data)</code>, consisting in the computed chi2 test statistic, the <code>p_value</code> of the test, and a heuristig flag that indicates if the sample size was sufficient. The <code>p_value</code> is the probability of observing the computed chi2 statistic (or an even higher chi2 value), given the null hypothesis that X and Y are independent given Zs.</p>
<p>This can be used to make independence judgements, at a given level of significance:</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[26]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 666.551px; margin-bottom: 0px; border-right-width: 30px; min-height: 142px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">is_independent</span>(<span class="cm-variable">X</span>, <span class="cm-variable">Y</span>, <span class="cm-variable">Zs</span>=[], <span class="cm-variable">significance_level</span>=<span class="cm-number">0.05</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">est</span>.<span class="cm-variable">test_conditional_independence</span>(<span class="cm-variable">X</span>, <span class="cm-variable">Y</span>, <span class="cm-variable">Zs</span>)[<span class="cm-number">1</span>] <span class="cm-operator">&gt;=</span> <span class="cm-variable">significance_level</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">is_independent</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'C'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">is_independent</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'H'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">is_independent</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'E'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">is_independent</span>(<span class="cm-string">'B'</span>, <span class="cm-string">'H'</span>, [<span class="cm-string">'A'</span>]))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">is_independent</span>(<span class="cm-string">'A'</span>, <span class="cm-string">'G'</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">is_independent</span>(<span class="cm-string">'A'</span>, <span class="cm-string">'G'</span>, [<span class="cm-string">'H'</span>]))</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 142px;"></div><div class="CodeMirror-gutters" style="display: none; height: 172px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>True
False
True
True
True
False
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[&nbsp;]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 3px; margin-bottom: 0px; border-right-width: 30px; min-height: 27px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 27px;"></div><div class="CodeMirror-gutters" style="display: none; height: 57px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 359px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.2725px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### DAG (pattern) construction</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### PC Algorithm for causal direction</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">With a method for independence testing at hand, we can construct a DAG from the data set in three steps:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">1. Construct an undirected skeleton - </span><span class="cm-comment cm-variable-2">`estimate_skeleton()`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">2. Orient compelled edges to obtain partially directed acyclid graph (PDAG; I-equivalence class of DAGs) - </span><span class="cm-comment cm-variable-2">`skeleton_to_pdag()`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">####  The following step orients any remaining edges, essentially at random, but in a way which is consistent with the edge directions produced by PC.  This is useful if we want to use the learned structure to perform inference, but we should not make any assumptions re. causality from the edges directed in the last step.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">3. Extend DAG pattern to a DAG by conservatively orienting the remaining edges in some way - </span><span class="cm-comment cm-variable-2">`pdag_to_dag()`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Step 1.&amp;2. form the so-called PC algorithm, see [2], page 550. PDAGs are <span class="cm-comment">`DirectedGraph`</span>s, that may contain both-way edges, to indicate that the orientation for the edge is not determined.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 359px;"></div><div class="CodeMirror-gutters" style="display: none; height: 389px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h4 id="DAG-(pattern)-construction">DAG (pattern) construction<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#DAG-(pattern)-construction">¶</a></h4>
<h4 id="PC-Algorithm-for-causal-direction">PC Algorithm for causal direction<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#PC-Algorithm-for-causal-direction">¶</a></h4>
<p>With a method for independence testing at hand, we can construct a DAG from the data set in three steps:</p>
<ol>
<li>Construct an undirected skeleton - <code>estimate_skeleton()</code></li>
<li>Orient compelled edges to obtain partially directed acyclid graph (PDAG; I-equivalence class of DAGs) - <code>skeleton_to_pdag()</code></li>
</ol>
<h4 id="The-following-step-orients-any-remaining-edges,-essentially-at-random,-but-in-a-way-which-is-consistent-with-the-edge-directions-produced-by-PC.--This-is-useful-if-we-want-to-use-the-learned-structure-to-perform-inference,-but-we-should-not-make-any-assumptions-re.-causality-from-the-edges-directed-in-the-last-step.">The following step orients any remaining edges, essentially at random, but in a way which is consistent with the edge directions produced by PC.  This is useful if we want to use the learned structure to perform inference, but we should not make any assumptions re. causality from the edges directed in the last step.<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#The-following-step-orients-any-remaining-edges,-essentially-at-random,-but-in-a-way-which-is-consistent-with-the-edge-directions-produced-by-PC.--This-is-useful-if-we-want-to-use-the-learned-structure-to-perform-inference,-but-we-should-not-make-any-assumptions-re.-causality-from-the-edges-directed-in-the-last-step.">¶</a></h4>
<ol>
<li>Extend DAG pattern to a DAG by conservatively orienting the remaining edges in some way - <code>pdag_to_dag()</code></li>
</ol>
<p>Step 1.&amp;2. form the so-called PC algorithm, see [2], page 550. PDAGs are <code>DirectedGraph</code>s, that may contain both-way edges, to indicate that the orientation for the edge is not determined.</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[27]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 590.997px; margin-bottom: 0px; border-right-width: 30px; min-height: 142px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">skel</span>, <span class="cm-variable">seperating_sets</span> = <span class="cm-variable">est</span>.<span class="cm-variable">estimate_skeleton</span>(<span class="cm-variable">significance_level</span>=<span class="cm-number">0.01</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"Undirected edges: "</span>, <span class="cm-variable">skel</span>.<span class="cm-variable">edges</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">pdag</span> = <span class="cm-variable">est</span>.<span class="cm-variable">skeleton_to_pdag</span>(<span class="cm-variable">skel</span>, <span class="cm-variable">seperating_sets</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"PDAG edges:       "</span>, <span class="cm-variable">pdag</span>.<span class="cm-variable">edges</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span> = <span class="cm-variable">est</span>.<span class="cm-variable">pdag_to_dag</span>(<span class="cm-variable">pdag</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"DAG edges:        "</span>, <span class="cm-variable">model</span>.<span class="cm-variable">edges</span>())</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 142px;"></div><div class="CodeMirror-gutters" style="display: none; height: 172px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>('Undirected edges: ', [('A', 'C'), ('A', 'B'), ('A', 'H'), ('E', 'F'), ('G', 'H')])
('PDAG edges:       ', [('A', 'H'), ('C', 'A'), ('B', 'A'), ('E', 'F'), ('G', 'H'), ('F', 'E')])
('DAG edges:        ', [('A', 'H'), ('C', 'A'), ('B', 'A'), ('G', 'H'), ('F', 'E')])
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 78px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.7271px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-4">#### The </span><span class="cm-comment cm-header cm-header-4">`estimate()`</span><span class="cm-header cm-header-4">-method provides a shorthand for the three steps above and directly returns a </span><span class="cm-comment cm-header cm-header-4">`BayesianModel`</span><span class="cm-header cm-header-4">. run these three steps separately rather than using the shortcut (estimate() function)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 78px;"></div><div class="CodeMirror-gutters" style="display: none; height: 108px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h4 id="The-estimate()-method-provides-a-shorthand-for-the-three-steps-above-and-directly-returns-a-BayesianModel.-run-these-three-steps-separately-rather-than-using-the-shortcut-(estimate()-function)">The <code>estimate()</code>-method provides a shorthand for the three steps above and directly returns a <code>BayesianModel</code>. run these three steps separately rather than using the shortcut (estimate() function)<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#The-estimate()-method-provides-a-shorthand-for-the-three-steps-above-and-directly-returns-a-BayesianModel.-run-these-three-steps-separately-rather-than-using-the-shortcut-(estimate()-function)">¶</a></h4>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[28]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 439.364px; margin-bottom: 0px; border-right-width: 30px; min-height: 27px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">est</span>.<span class="cm-variable">estimate</span>(<span class="cm-variable">significance_level</span>=<span class="cm-number">0.01</span>).<span class="cm-variable">edges</span>())</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 27px;"></div><div class="CodeMirror-gutters" style="display: none; height: 57px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>[('A', 'H'), ('C', 'A'), ('B', 'A'), ('G', 'H'), ('F', 'E')]
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 76px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">PC PDAG construction is only guaranteed to work under the assumption that the identified set of independencies is <span class="cm-em">*faithful*</span>, i.e. there exists a DAG that exactly corresponds to it. Spurious dependencies in the data set can cause the reported independencies to violate faithfulness. It can happen that the estimated PDAG does not have any faithful completions (i.e. edge orientations that do not introduce new v-structures). In that case a warning is issued.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 76px;"></div><div class="CodeMirror-gutters" style="display: none; height: 106px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><p>PC PDAG construction is only guaranteed to work under the assumption that the identified set of independencies is <em>faithful</em>, i.e. there exists a DAG that exactly corresponds to it. Spurious dependencies in the data set can cause the reported independencies to violate faithfulness. It can happen that the estimated PDAG does not have any faithful completions (i.e. edge orientations that do not introduce new v-structures). In that case a warning is issued.</p>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[&nbsp;]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 3px; margin-bottom: 0px; border-right-width: 30px; min-height: 27px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 27px;"></div><div class="CodeMirror-gutters" style="display: none; height: 57px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.5957px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 29px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 18.1816px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Practice Two.</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 29px;"></div><div class="CodeMirror-gutters" style="display: none; height: 59px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Practice-Two.">Practice Two.<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Practice-Two.">¶</a></h3>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[56]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 927.062px; margin-bottom: 0px; border-right-width: 30px; min-height: 125px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">pandas</span> <span class="cm-keyword">as</span> <span class="cm-variable">pd</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Generating radom data with each variable have 2 states and equal probabilities for each state</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">sklearn</span>.<span class="cm-variable">cross_validation</span> <span class="cm-keyword">import</span> <span class="cm-variable">train_test_split</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span> = <span class="cm-variable">pd</span>.<span class="cm-variable">read_csv</span>(<span class="cm-string">"https://serv.cusp.nyu.edu/classes/ML_2016_Spring/ML_2017/NYC_taxi_sample.csv"</span>,<span class="cm-variable">index_col</span>=<span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data</span>.<span class="cm-variable">manhattan</span>=<span class="cm-variable">data</span>.<span class="cm-variable">manhattan</span><span class="cm-operator">-</span><span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">train</span>,<span class="cm-variable">test</span>=<span class="cm-variable">train_test_split</span>(<span class="cm-variable">data</span>,<span class="cm-variable">random_state</span>=<span class="cm-number">999</span>,<span class="cm-variable">test_size</span>=<span class="cm-number">0.2</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">train</span>.<span class="cm-variable">head</span>()</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 125px;"></div><div class="CodeMirror-gutters" style="display: none; height: 155px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[56]:</div><div class="output_subarea output_html rendered_html output_result"><div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>manhattan</th>
      <th>tip</th>
      <th>dist</th>
      <th>speed</th>
      <th>pass</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1549869</th>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>1524693</th>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2017453</th>
      <td>1</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <th>1670807</th>
      <td>1</td>
      <td>4</td>
      <td>4</td>
      <td>3</td>
      <td>1</td>
    </tr>
    <tr>
      <th>3389132</th>
      <td>0</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
      <td>1</td>
    </tr>
  </tbody>
</table>
</div></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 231px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 18.1816px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### (1) Detect the structure. </span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Why don't try some both ExhaustiveSearch and HillClimbSearch with different scoring_methods</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### (2) Train parameters using your learnt structure and get all independencies.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### (3)Report the OS classification accuracy for "Manhattan" </span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">use: model.predict</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The code contains a bug. Change all the class from 0 not from 1. Your current values are from 1.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### (4) Use PC Algorithm to detect causal direction among the features provided.</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 231px;"></div><div class="CodeMirror-gutters" style="display: none; height: 261px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="(1)-Detect-the-structure.">(1) Detect the structure.<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#(1)-Detect-the-structure.">¶</a></h3>
<p>Why don't try some both ExhaustiveSearch and HillClimbSearch with different scoring_methods</p>
<h3 id="(2)-Train-parameters-using-your-learnt-structure-and-get-all-independencies.">(2) Train parameters using your learnt structure and get all independencies.<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#(2)-Train-parameters-using-your-learnt-structure-and-get-all-independencies.">¶</a></h3>
<h3 id="(3)Report-the-OS-classification-accuracy-for-&quot;Manhattan&quot;">(3)Report the OS classification accuracy for "Manhattan"<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#(3)Report-the-OS-classification-accuracy-for-&quot;Manhattan&quot;">¶</a></h3>
<p>use: model.predict</p>
<p>The code contains a bug. Change all the class from 0 not from 1. Your current values are from 1.</p>
<h3 id="(4)-Use-PC-Algorithm-to-detect-causal-direction-among-the-features-provided.">(4) Use PC Algorithm to detect causal direction among the features provided.<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#(4)-Use-PC-Algorithm-to-detect-causal-direction-among-the-features-provided.">¶</a></h3>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[47]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 498.455px; margin-bottom: 0px; border-right-width: 30px; min-height: 60px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">hc</span> = <span class="cm-variable">HillClimbSearch</span>(<span class="cm-variable">train</span>, <span class="cm-variable">scoring_method</span>=<span class="cm-variable">BicScore</span>(<span class="cm-variable">train</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">best_model</span> = <span class="cm-variable">hc</span>.<span class="cm-variable">estimate</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-variable">best_model</span>.<span class="cm-variable">edges</span>())</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 60px;"></div><div class="CodeMirror-gutters" style="display: none; height: 90px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>[('dist', 'speed'), ('manhattan', 'tip'), ('manhattan', 'pass'), ('speed', 'manhattan'), ('pass', 'tip')]
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[52]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 624.605px; margin-bottom: 0px; border-right-width: 30px; min-height: 207px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Defining the model</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">models</span> <span class="cm-keyword">import</span> <span class="cm-variable">BayesianModel</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">pgmpy</span>.<span class="cm-variable">estimators</span> <span class="cm-keyword">import</span> <span class="cm-variable">MaximumLikelihoodEstimator</span>, <span class="cm-variable">BayesianEstimator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span> = <span class="cm-variable">BayesianModel</span>(<span class="cm-variable">best_model</span>.<span class="cm-variable">edges</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Learing CPDs using Maximum Likelihood Estimators</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">model</span>.<span class="cm-variable">fit</span>(<span class="cm-variable">train</span>, <span class="cm-variable">estimator</span>=<span class="cm-variable">MaximumLikelihoodEstimator</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># for cpd in model.get_cpds():</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     print("CPD of {variable}:".format(variable=cpd.variable))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     print(cpd)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># print model.get_independencies()</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 207px;"></div><div class="CodeMirror-gutters" style="display: none; height: 237px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[46]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 481.736px; margin-bottom: 0px; border-right-width: 30px; min-height: 93px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">test</span>.<span class="cm-variable">index</span>=<span class="cm-builtin">range</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">test</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">predict_data</span> = <span class="cm-variable">test</span>.<span class="cm-variable">copy</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">predict_data</span>.<span class="cm-variable">drop</span>(<span class="cm-string">'manhattan'</span>, <span class="cm-variable">axis</span>=<span class="cm-number">1</span>, <span class="cm-variable">inplace</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">y_pred</span> = <span class="cm-variable">model</span>.<span class="cm-variable">predict</span>(<span class="cm-variable">predict_data</span><span class="cm-operator">-</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">(<span class="cm-variable">y_pred</span>[<span class="cm-string">"manhattan"</span>]<span class="cm-operator">==</span><span class="cm-variable">test</span>.<span class="cm-variable">manhattan</span>).<span class="cm-builtin">sum</span>()<span class="cm-operator">*</span><span class="cm-number">1.0</span><span class="cm-operator">/</span><span class="cm-builtin">len</span>(<span class="cm-variable">test</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 93px;"></div><div class="CodeMirror-gutters" style="display: none; height: 123px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[46]:</div><div class="output_subarea output_text output_result"><pre>0.69418386491557227</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 29px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 18.1816px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Causal Direction</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 29px;"></div><div class="CodeMirror-gutters" style="display: none; height: 59px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Causal-Direction">Causal Direction<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#Causal-Direction">¶</a></h3>
</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[26]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 590.997px; margin-bottom: 0px; border-right-width: 30px; min-height: 109px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">est</span> = <span class="cm-variable">ConstraintBasedEstimator</span>(<span class="cm-variable">train</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">skel</span>, <span class="cm-variable">seperating_sets</span> = <span class="cm-variable">est</span>.<span class="cm-variable">estimate_skeleton</span>(<span class="cm-variable">significance_level</span>=<span class="cm-number">0.01</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"Undirected edges: "</span>, <span class="cm-variable">skel</span>.<span class="cm-variable">edges</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">pdag</span> = <span class="cm-variable">est</span>.<span class="cm-variable">skeleton_to_pdag</span>(<span class="cm-variable">skel</span>, <span class="cm-variable">seperating_sets</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">print</span>(<span class="cm-string">"PDAG edges:       "</span>, <span class="cm-variable">pdag</span>.<span class="cm-variable">edges</span>())</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 109px;"></div><div class="CodeMirror-gutters" style="display: none; height: 139px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>('Undirected edges: ', [('tip', 'pass'), ('dist', 'speed'), ('dist', 'manhattan'), ('manhattan', 'speed')])
('PDAG edges:       ', [('dist', 'speed'), ('dist', 'manhattan'), ('tip', 'pass'), ('manhattan', 'speed'), ('manhattan', 'dist'), ('speed', 'dist'), ('speed', 'manhattan'), ('pass', 'tip')])
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[&nbsp;]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 3px; margin-bottom: 0px; border-right-width: 30px; min-height: 27px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 27px;"></div><div class="CodeMirror-gutters" style="display: none; height: 57px;"></div></div></div></div></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59668px; left: 5.59659px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 209px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 16.3633px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### References</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">[1] Koller &amp; Friedman, Probabilistic Graphical Models - Principles and Techniques, 2009</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-link">[2] Neapolitan, [Learning Bayesian Networks]</span><span class="cm-string cm-url">(http://www.cs.technion.ac.il/~dang/books/Learning%20Bayesian%20Networks&amp;#40;Neapolitan,%20Richard&amp;#41;.pdf)</span>, 2003</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-link">[3] Tsamardinos et al., [The max-min hill-climbing BN structure learning algorithm]</span><span class="cm-string cm-url">(http://www.dsl-lab.org/supplements/mmhc_paper/paper_online.pdf)</span>, 2005</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 209px;"></div><div class="CodeMirror-gutters" style="display: none; height: 239px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="References">References<a class="anchor-link" href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#References">¶</a></h3>
<p>[1] Koller &amp; Friedman, Probabilistic Graphical Models - Principles and Techniques, 2009</p>
<p>[2] Neapolitan, <a href="http://www.cs.technion.ac.il/~dang/books/Learning%20Bayesian%20Networks(Neapolitan,%20Richard).pdf" target="_blank">Learning Bayesian Networks</a>, 2003</p>
<p>[3] Tsamardinos et al., <a href="http://www.dsl-lab.org/supplements/mmhc_paper/paper_online.pdf" target="_blank">The max-min hill-climbing BN structure learning algorithm</a>, 2005</p>
</div></div></div></div><div class="end_space"></div></div>
        <div id="tooltip" class="ipython_tooltip" style="display:none"><div class="tooltipbuttons"><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" role="button" class="ui-button"><span class="ui-icon ui-icon-close">Close</span></a><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" class="ui-corner-all" role="button" id="expanbutton" title="Grow the tooltip vertically (press shift-tab twice)"><span class="ui-icon ui-icon-plus">Expand</span></a><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" role="button" class="ui-button" title="show the current docstring in pager (press shift-tab 4 times)"><span class="ui-icon ui-icon-arrowstop-l-n">Open in Pager</span></a><a href="http://localhost:8888/notebooks/Downloads/Bayesian%20Networks%202-Practice-Part-Solution.ipynb#" role="button" class="ui-button" title="Tooltip will linger for 10 seconds while you type" style="display: none;"><span class="ui-icon ui-icon-clock">Close</span></a></div><div class="pretooltiparrow"></div><div class="tooltiptext smalltooltip"></div></div>
    </div>
</div>



</div>



<div id="pager" class="ui-resizable">
    <div id="pager-contents">
        <div id="pager-container" class="container"></div>
    </div>
    <div id="pager-button-area"><a role="button" title="Open the pager in an external window" class="ui-button"><span class="ui-icon ui-icon-extlink"></span></a><a role="button" title="Close the pager" class="ui-button"><span class="ui-icon ui-icon-close"></span></a></div>
<div class="ui-resizable-handle ui-resizable-n" style="z-index: 90;"></div></div>






<script type="text/javascript">
    sys_info = {"os_name": "posix", "default_encoding": "UTF-8", "sys_version": "3.5.2 |Anaconda custom (x86_64)| (default, Jul  2 2016, 17:52:12) \n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)]", "notebook_version": "4.2.1", "notebook_path": "/Users/tashaygreen/anaconda/lib/python3.5/site-packages/notebook", "commit_source": "repository", "sys_platform": "darwin", "sys_executable": "/Users/tashaygreen/anaconda/bin/python", "platform": "Darwin-15.6.0-x86_64-i386-64bit", "commit_hash": "ce109eb"};
</script>

<script src="./Jupyter Notebook_files/encoding.js" charset="utf-8"></script>


    <script src="./Jupyter Notebook_files/main.min.js" type="text/javascript" charset="utf-8"></script><div id="ghostery-purple-box" class="ghostery-bottom ghostery-right ghostery-none ghostery-collapsed"><div id="ghostery-box"><div id="ghostery-count" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/box_ghosty_white.png&quot;) center center no-repeat; color: transparent;">0</div><div id="ghostery-pb-icons-container"><span id="ghostery-breaking-tracker" class="ghostery-pb-tracker" title="Broken Page Trackers" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/breaking-icon.svg&quot;); opacity: 0.5;"></span><span id="ghostery-slow-tracker" class="ghostery-pb-tracker" title="Slow Trackers" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/slow-icon.svg&quot;); opacity: 0.5;"></span><span id="ghostery-non-secure-tracker" class="ghostery-pb-tracker" title="Non-secure Trackers" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/non-secure-icon.svg&quot;); opacity: 0.5;"></span></div><div id="ghostery-title">Looking</div><div id="ghostery-minimize"><span id="ghostery-minimize-icon"></span></div><span id="ghostery-close" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/collapse.svg&quot;);"></span></div><div id="ghostery-pb-background"><div id="ghostery-trackerList"></div></div></div>






<div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal;"></div></div></body></html>